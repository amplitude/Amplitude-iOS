name: Release

# on:
#   workflow_dispatch:
#     inputs:
#       dryRun:
#         description: 'Do a dry run to preview instead of a real release'
#         required: true
#         default: 'true'

on: push # @TODO Change to workflow dispatch

jobs:
  authorize:
    name: Authorize
    runs-on: macos-10.14
    steps:
      - name: ${{ github.actor }} permission check to do a release
        uses: octokit/request-action@v2.0.0
        with:
          route: GET /repos/:repository/collaborators/${{ github.actor }}
          repository: ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: macos-10.14
    needs: [authorize]
    strategy:
      matrix:
        ruby-version: ["2.6.x"]
        node-version: ["12.x"]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Set Xcode
      run: |
        sudo xcode-select -switch /Applications/Xcode_12.app

    - name: Setup Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}

    - name: Cache Bundle Gems and Cocoapods
      id: cache-gems-pods
      uses: actions/cache@v2
      with:
        path: |
          Pods
          vendor/bundle
        key: ${{ runner.os }}-ruby-${{ matrix.ruby-version }}-gems-${{ hashFiles('**/Gemfile.lock') }}-pods-${{ hashFiles('**/Podfile.lock') }}
    
    - name: Install Cocoapods
      if: steps.cache-gems-pods.outputs.cache-hit == 'false'
      run: |
        gem install bundler
        bundle config path vendor/bundle
        bundle install
        pod install

    # - name: Run tests @TODO RE-ENABLE TESTS
    #   run: |
    #     xcodebuild test \
    #       -workspace Amplitude.xcworkspace \
    #       -scheme Amplitude_iOSTests \
    #       -sdk iphonesimulator \
    #       -destination 'platform=iOS Simulator,name=iPhone 11,OS=14.0'
    
    - name: Validate Podfile
      run: |
        pod spec lint

    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    # - name: semantic-release cache
    #   id: cache-semantic-release-deps
    #   uses: actions/cache@v2
    #   with:
    #     path: '**/node_modules'
    #     key: ${{ runner.os }}-${{ matrix.node-version }}-modules-${{ hashFiles('**/package-lock.json') }}

    - name: Semantic Release --dry-run
      # if: steps.cache-semantic-release-deps.outputs.cache-hit == 'false'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
      run: |
        npx \
        -p lodash \
        -p semantic-release@17 \
        -p @semantic-release/changelog@5 \
        -p @semantic-release/git@9 \
        -p @google/semantic-release-replace-plugin@1 \
        -p @semantic-release/exec@5 \
        semantic-release --dry-run

    # - name: Release --dry-run  # Uses release.config.js
    #   # if: ${{ github.event.inputs.dryRun == 'true'}}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
    #   run: semantic-release --dry-run

    # - name: Release # Uses release.config.js
    #   if: ${{ github.event.inputs.dryRun == 'false'}}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
      # run: |
        # npx \
        # -p lodash \
        # -p semantic-release@17 \
        # -p @semantic-release/changelog@5 \
        # -p @semantic-release/git@9 \
        # -p @google/semantic-release-replace-plugin@1 \
        # -p @semantic-release/exec@5 \
        # semantic-release --dry-run 

    # - name: Generate docs
    #   run: |
    #     appledoc --project-name Amplitude --project-company "Amplitude Inc" --company-id com.amplitude --no-create-docset --output ./doc/ .

    # - name: Release --dry-run  # Uses release.config.js
    #   if: ${{ github.event.inputs.dryRun == 'true'}}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_REGION: ${{ secrets.AWS_REGION }}
    #     S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
    #   run: npx semantic-release --dry-run

    # - name: Release # Uses release.config.js
    #   if: ${{ github.event.inputs.dryRun == 'false'}}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_REGION: ${{ secrets.AWS_REGION }}
    #     S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
    #   run: npx semantic-release
